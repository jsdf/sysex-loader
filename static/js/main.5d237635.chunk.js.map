{"version":3,"sources":["MidiDeviceSelector.js","useLocalStorage.js","useLocalForage.js","Table.js","byteArrayToHex.js","md5.js","Checkbox.js","uniqueID.js","LogView.js","EditableText.js","sysex.js","App.js","downloadBlob.js","reportWebVitals.js","index.js"],"names":["MidiDeviceSelector","type","onChange","selectedPortID","sysex","React","useState","availablePorts","setAvailablePorts","initRef","useRef","current","accessType","useEffect","navigator","requestMIDIAccess","Boolean","then","access","Array","from","values","find","port","id","onstatechange","e","parseInt","currentTarget","value","findIndex","map","i","name","useLocalStorage","baseKey","initialValue","key","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","queue","Promise","resolve","INITIAL_VALUE","Table","items","headings","layout","rowRenderer","className","heading","style","width","cell","k","LUT_HEX_4b","LUT_HEX_8b","n","toHex","buffer","out","idx","edx","length","md5cycle","x","a","b","c","d","ff","gg","hh","ii","add32","cmn","q","s","t","md5blk","md5blks","charCodeAt","hex_chr","split","rhex","j","md5","join","hex","state","substring","tail","md51","Checkbox","label","checked","useCallback","LogView","useTransition","keys","opacity","enter","leave","transition","div","lineHeight","msg","EditableText","inline","size","editingValue","setEditingValue","inputRef","onInputChange","onBlur","updated","onKeyUp","isEditing","onEditClick","focus","select","ref","createElement","onClick","children","range","startAt","bytesToUTF8","bytes","TextDecoder","decode","parseDX7VoiceSingleFormat","data","startOffset","slice","parseSysexMessage","voice","voices","parseDX7VoiceBulkFormat","getSysexManufacturer","bytesToManufacturerID","v","toString","padStart","midimanufacturers","concatTypedArrays","ArrayType","arrays","totalLength","result","offset","arr","set","splitToSysExMessages","pos","lastPos","parts","indexOf","push","Modal","setAppElement","document","body","MidiPortReference","this","getTimestampString","ts","Date","getFullYear","getMonth","getDate","String","getHours","getMinutes","getSeconds","makeItem","message","timestamp","now","hash","byteArrayToHex","messagesCount","formatBytesForDisplay","str","lineLength","Math","ceil","line","downloadItem","blob","blobUrl","URL","createObjectURL","link","href","download","appendChild","dispatchEvent","MouseEvent","bubbles","cancelable","view","removeChild","downloadBlob","Blob","Uint8Array","toLowerCase","endsWith","FileDropzone","onFile","onStatus","autoSend","onDrop","acceptedFiles","forEach","file","reader","FileReader","onabort","onerror","onload","binaryStr","readAsArrayBuffer","useDropzone","getRootProps","inputProps","getInputProps","textAlign","border","borderRadius","cursor","margin","fontSize","maxWidth","display","SendButton","memo","sendItem","ItemName","updateItem","updatedName","InfoButton","setModalContent","title","marginTop","parsed","Fragment","DeleteButton","deleteItem","DownloadButton","addToSysexMessages","prev","newItem","concat","getKey","Map","App","midiIn","setMidiIn","midiOut","setMidiOut","setAutoSend","errorMessage","setErrorMessageState","statusMessages","setStatusMessagesState","modalContent","sysexMessagesReceived","setSysexMessagesReceived","updateSysexMessagesReceivedList","cb","messages","messagesToLibraryFile","messagesReceived","m","storeMessages","setSysexMessages","getInitialValue","initialValueRef","committedValue","setCommittedValue","updatedValueRef","localforage","removeItem","useLocalForage","sysexMessagesFromStorage","clearSysexMessages","sysexMessages","useMemo","setStatusMessage","setErrorMessage","sendMidi","buf","send","err","itemToDelete","filter","itemToUpdate","onmidimessage","event","newMsg","source","initSysexMessagesReceived","tableItems","sort","padding","backgroundColor","color","paddingBottom","arrayBuffer","overflowY","height","otherItem","confirm","isOpen","onRequestClose","contentLabel","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5d237635.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function MidiDeviceSelector({\n  type,\n  onChange,\n  selectedPortID,\n  sysex,\n}) {\n  const [availablePorts, setAvailablePorts] = React.useState([]);\n  const initRef = React.useRef({selectedPortID, onChange});\n  initRef.current = {selectedPortID, onChange};\n\n  const accessType = type === 'input' ? 'inputs' : 'outputs';\n\n  React.useEffect(() => {\n    if (!navigator.requestMIDIAccess) {\n      return;\n    }\n    navigator.requestMIDIAccess({sysex: Boolean(sysex)}).then((access) => {\n      const availablePorts = Array.from(access[accessType].values());\n      initRef.current.onChange(\n        availablePorts.find(\n          (port) => port.id === initRef.current.selectedPortID\n        )\n      );\n      setAvailablePorts(availablePorts);\n\n      access.onstatechange = function (e) {\n        setAvailablePorts(Array.from(access[accessType].values()));\n      };\n    });\n  }, [accessType, sysex]);\n\n  return (\n    <label>\n      midi {type === 'input' ? 'in' : 'out'}:{' '}\n      <select\n        onChange={(e) => {\n          onChange(availablePorts[parseInt(e.currentTarget.value)]);\n        }}\n        value={availablePorts.findIndex((port) => port.id === selectedPortID)}\n      >\n        <option key={-1} value={-1}>\n          (none)\n        </option>\n        {availablePorts.map((port, i) => (\n          <option key={i} value={i}>\n            {port.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n}\n","import {useState} from 'react';\n\nexport default function useLocalStorage(baseKey, initialValue) {\n  const key = `sysex7-${baseKey}`;\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import {useState, useEffect, useRef} from 'react';\nimport localforage from 'localforage';\n\nlet queue = Promise.resolve();\n\nconst INITIAL_VALUE = {};\n\nexport default function useLocalForage(key, getInitialValue = null) {\n  const initialValueRef = useRef(INITIAL_VALUE);\n  if (initialValueRef.current === INITIAL_VALUE) {\n    initialValueRef.current =\n      typeof getInitialValue === 'function'\n        ? getInitialValue()\n        : getInitialValue;\n  }\n\n  const [committedValue, setCommittedValue] = useState(initialValueRef.current);\n  // need to use a ref for whatever the latest version in the process of\n  // persisting is, otherwise we get lost updates\n  const updatedValueRef = useRef(initialValueRef.current);\n\n  useEffect(() => {\n    queue = queue.then(\n      (async function () {\n        try {\n          const value = await localforage.getItem(key);\n\n          updatedValueRef.current = value;\n          setCommittedValue(value);\n        } catch (err) {\n          return updatedValueRef.current;\n        }\n      })()\n    );\n  }, [key]);\n\n  const set = (value) => {\n    queue = queue.then(\n      (async function () {\n        try {\n          // Allow value to be a function so we have same API as useState\n          const valueToStore =\n            typeof value === 'function'\n              ? value(updatedValueRef.current)\n              : value;\n\n          updatedValueRef.current = valueToStore;\n          await localforage.setItem(key, valueToStore);\n          setCommittedValue(updatedValueRef.current);\n        } catch (err) {\n          console.error(err);\n          return updatedValueRef.current;\n        }\n      })()\n    );\n  };\n\n  const remove = () => {\n    queue = queue.then(\n      (async function () {\n        try {\n          updatedValueRef.current = initialValueRef.current;\n          await localforage.removeItem(key);\n          setCommittedValue(updatedValueRef.current);\n        } catch (err) {\n          console.error(err);\n        }\n      })()\n    );\n  };\n\n  return [committedValue, set, remove];\n}\n","import './Table.css';\n\nexport default function Table({items, headings, layout, rowRenderer}) {\n  return (\n    <table className=\"Table\">\n      {headings && (\n        <thead>\n          <tr>\n            {headings.map((heading, i) => (\n              <th\n                key={i}\n                className={`Table_col_${i}`}\n                style={{width: typeof layout[i] == 'number' ? layout[i] : null}}\n              >\n                {heading}\n              </th>\n            ))}\n          </tr>\n        </thead>\n      )}\n      <tbody>\n        {items.map((item, i) => (\n          <tr key={i}>\n            {rowRenderer(item, i).map((cell, k) => (\n              <td\n                className={`${i % 2 === 0 ? 'Table_odd' : null} Table_col_${k}`}\n                style={{width: typeof layout[k] == 'number' ? layout[k] : null}}\n                key={k}\n              >\n                {cell}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","const LUT_HEX_4b = [\n  '0',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n];\nconst LUT_HEX_8b = new Array(0x100);\nfor (let n = 0; n < 0x100; n++) {\n  LUT_HEX_8b[n] = `${LUT_HEX_4b[(n >>> 4) & 0xf]}${LUT_HEX_4b[n & 0xf]}`;\n}\nexport default function toHex(buffer) {\n  let out = '';\n  for (let idx = 0, edx = buffer.length; idx < edx; idx++) {\n    out += LUT_HEX_8b[buffer[idx]];\n  }\n  return out;\n}\n","function md5cycle(x, k) {\n  var a = x[0],\n    b = x[1],\n    c = x[2],\n    d = x[3];\n\n  a = ff(a, b, c, d, k[0], 7, -680876936);\n  d = ff(d, a, b, c, k[1], 12, -389564586);\n  c = ff(c, d, a, b, k[2], 17, 606105819);\n  b = ff(b, c, d, a, k[3], 22, -1044525330);\n  a = ff(a, b, c, d, k[4], 7, -176418897);\n  d = ff(d, a, b, c, k[5], 12, 1200080426);\n  c = ff(c, d, a, b, k[6], 17, -1473231341);\n  b = ff(b, c, d, a, k[7], 22, -45705983);\n  a = ff(a, b, c, d, k[8], 7, 1770035416);\n  d = ff(d, a, b, c, k[9], 12, -1958414417);\n  c = ff(c, d, a, b, k[10], 17, -42063);\n  b = ff(b, c, d, a, k[11], 22, -1990404162);\n  a = ff(a, b, c, d, k[12], 7, 1804603682);\n  d = ff(d, a, b, c, k[13], 12, -40341101);\n  c = ff(c, d, a, b, k[14], 17, -1502002290);\n  b = ff(b, c, d, a, k[15], 22, 1236535329);\n\n  a = gg(a, b, c, d, k[1], 5, -165796510);\n  d = gg(d, a, b, c, k[6], 9, -1069501632);\n  c = gg(c, d, a, b, k[11], 14, 643717713);\n  b = gg(b, c, d, a, k[0], 20, -373897302);\n  a = gg(a, b, c, d, k[5], 5, -701558691);\n  d = gg(d, a, b, c, k[10], 9, 38016083);\n  c = gg(c, d, a, b, k[15], 14, -660478335);\n  b = gg(b, c, d, a, k[4], 20, -405537848);\n  a = gg(a, b, c, d, k[9], 5, 568446438);\n  d = gg(d, a, b, c, k[14], 9, -1019803690);\n  c = gg(c, d, a, b, k[3], 14, -187363961);\n  b = gg(b, c, d, a, k[8], 20, 1163531501);\n  a = gg(a, b, c, d, k[13], 5, -1444681467);\n  d = gg(d, a, b, c, k[2], 9, -51403784);\n  c = gg(c, d, a, b, k[7], 14, 1735328473);\n  b = gg(b, c, d, a, k[12], 20, -1926607734);\n\n  a = hh(a, b, c, d, k[5], 4, -378558);\n  d = hh(d, a, b, c, k[8], 11, -2022574463);\n  c = hh(c, d, a, b, k[11], 16, 1839030562);\n  b = hh(b, c, d, a, k[14], 23, -35309556);\n  a = hh(a, b, c, d, k[1], 4, -1530992060);\n  d = hh(d, a, b, c, k[4], 11, 1272893353);\n  c = hh(c, d, a, b, k[7], 16, -155497632);\n  b = hh(b, c, d, a, k[10], 23, -1094730640);\n  a = hh(a, b, c, d, k[13], 4, 681279174);\n  d = hh(d, a, b, c, k[0], 11, -358537222);\n  c = hh(c, d, a, b, k[3], 16, -722521979);\n  b = hh(b, c, d, a, k[6], 23, 76029189);\n  a = hh(a, b, c, d, k[9], 4, -640364487);\n  d = hh(d, a, b, c, k[12], 11, -421815835);\n  c = hh(c, d, a, b, k[15], 16, 530742520);\n  b = hh(b, c, d, a, k[2], 23, -995338651);\n\n  a = ii(a, b, c, d, k[0], 6, -198630844);\n  d = ii(d, a, b, c, k[7], 10, 1126891415);\n  c = ii(c, d, a, b, k[14], 15, -1416354905);\n  b = ii(b, c, d, a, k[5], 21, -57434055);\n  a = ii(a, b, c, d, k[12], 6, 1700485571);\n  d = ii(d, a, b, c, k[3], 10, -1894986606);\n  c = ii(c, d, a, b, k[10], 15, -1051523);\n  b = ii(b, c, d, a, k[1], 21, -2054922799);\n  a = ii(a, b, c, d, k[8], 6, 1873313359);\n  d = ii(d, a, b, c, k[15], 10, -30611744);\n  c = ii(c, d, a, b, k[6], 15, -1560198380);\n  b = ii(b, c, d, a, k[13], 21, 1309151649);\n  a = ii(a, b, c, d, k[4], 6, -145523070);\n  d = ii(d, a, b, c, k[11], 10, -1120210379);\n  c = ii(c, d, a, b, k[2], 15, 718787259);\n  b = ii(b, c, d, a, k[9], 21, -343485551);\n\n  x[0] = add32(a, x[0]);\n  x[1] = add32(b, x[1]);\n  x[2] = add32(c, x[2]);\n  x[3] = add32(d, x[3]);\n}\n\nfunction cmn(q, a, b, x, s, t) {\n  a = add32(add32(a, q), add32(x, t));\n  return add32((a << s) | (a >>> (32 - s)), b);\n}\n\nfunction ff(a, b, c, d, x, s, t) {\n  return cmn((b & c) | (~b & d), a, b, x, s, t);\n}\n\nfunction gg(a, b, c, d, x, s, t) {\n  return cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\n\nfunction hh(a, b, c, d, x, s, t) {\n  return cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction ii(a, b, c, d, x, s, t) {\n  return cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nfunction md51(s) {\n  var n = s.length,\n    state = [1732584193, -271733879, -1732584194, 271733878],\n    i;\n  for (i = 64; i <= s.length; i += 64) {\n    md5cycle(state, md5blk(s.substring(i - 64, i)));\n  }\n  s = s.substring(i - 64);\n  var tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  for (i = 0; i < s.length; i++)\n    tail[i >> 2] |= s.charCodeAt(i) << (i % 4 << 3);\n  tail[i >> 2] |= 0x80 << (i % 4 << 3);\n  if (i > 55) {\n    md5cycle(state, tail);\n    for (i = 0; i < 16; i++) tail[i] = 0;\n  }\n  tail[14] = n * 8;\n  md5cycle(state, tail);\n  return state;\n}\n\n/* there needs to be support for Unicode here,\n * unless we pretend that we can redefine the MD-5\n * algorithm for multi-byte characters (perhaps\n * by adding every four 16-bit characters and\n * shortening the sum to 32 bits). Otherwise\n * I suggest performing MD-5 as if every character\n * was two bytes--e.g., 0040 0025 = @%--but then\n * how will an ordinary MD-5 sum be matched?\n * There is no way to standardize text to something\n * like UTF-8 before transformation; speed cost is\n * utterly prohibitive. The JavaScript standard\n * itself needs to look at this: it should start\n * providing access to strings as preformed UTF-8\n * 8-bit unsigned value arrays.\n */\nfunction md5blk(s) {\n  /* I figured global was faster.   */\n  var md5blks = [],\n    i; /* Andy King said do it this way. */\n  for (i = 0; i < 64; i += 4) {\n    md5blks[i >> 2] =\n      s.charCodeAt(i) +\n      (s.charCodeAt(i + 1) << 8) +\n      (s.charCodeAt(i + 2) << 16) +\n      (s.charCodeAt(i + 3) << 24);\n  }\n  return md5blks;\n}\n\nvar hex_chr = '0123456789abcdef'.split('');\n\nfunction rhex(n) {\n  var s = '',\n    j = 0;\n  for (; j < 4; j++)\n    s += hex_chr[(n >> (j * 8 + 4)) & 0x0f] + hex_chr[(n >> (j * 8)) & 0x0f];\n  return s;\n}\n\nfunction hex(x) {\n  for (var i = 0; i < x.length; i++) x[i] = rhex(x[i]);\n  return x.join('');\n}\n\nexport default function md5(s) {\n  return hex(md51(s));\n}\nfunction add32(a, b) {\n  return (a + b) & 0xffffffff;\n}\n","import React from 'react';\n\nexport default function Checkbox({label, checked, onChange}) {\n  return (\n    <label>\n      <input\n        type=\"checkbox\"\n        onChange={React.useCallback(() => onChange((s) => !s), [onChange])}\n        checked={checked}\n      />{' '}\n      {label}\n    </label>\n  );\n}\n","let id = 0;\nexport default function uniqueID() {\n  return id++;\n}\n","import React from 'react';\nimport {useTransition, animated} from 'react-spring';\n\nexport default function LogView({items}) {\n  const transition = useTransition(items, {\n    keys: (item) => item.id,\n    from: {opacity: 0},\n    enter: {opacity: 1},\n    leave: {opacity: 0},\n  });\n\n  return transition((style, item) => {\n    return (\n      <animated.div style={style}>\n        <div style={{lineHeight: '1.2em'}}>{item.msg}</div>\n      </animated.div>\n    );\n  });\n}\n","import React, {useState, useCallback, useRef, useEffect} from 'react';\n\nimport './EditableText.css';\n\nexport default function EditableText({\n  value,\n  onChange,\n  className,\n  inline,\n  size = 20,\n}) {\n  const [editingValue, setEditingValue] = useState(null);\n  const inputRef = useRef(null);\n  const onInputChange = useCallback(\n    (e) => setEditingValue({value: e.currentTarget.value}),\n    []\n  );\n  const onBlur = useCallback(() => {\n    const updated = inputRef.current?.value;\n    setEditingValue(null);\n    onChange(updated);\n  }, [onChange]);\n  const onKeyUp = useCallback(\n    (e) => {\n      if (e.key === 'Enter') {\n        const updated = inputRef.current?.value;\n        setEditingValue(null);\n        onChange(updated);\n      }\n    },\n    [onChange]\n  );\n  const isEditing = editingValue?.value != null;\n\n  const onEditClick = useCallback(() => {\n    setEditingValue({value});\n  }, [value]);\n  useEffect(() => {\n    if (isEditing) {\n      inputRef.current?.focus();\n      inputRef.current?.select();\n    }\n  }, [isEditing]);\n\n  if (editingValue) {\n    return (\n      <input\n        type=\"text\"\n        className={inline ? 'EditableText_inline' : 'EditableText_block'}\n        value={editingValue.value}\n        size={size}\n        ref={inputRef}\n        onChange={onInputChange}\n        onBlur={onBlur}\n        onKeyUp={onKeyUp}\n      />\n    );\n  }\n\n  return React.createElement('span', {\n    className: `EditableText_view ${className} ${\n      inline ? 'EditableText_inline' : 'EditableText_block'\n    }`,\n    onClick: onEditClick,\n    children: value,\n  });\n}\n","import midimanufacturers from './midimanufacturers.json';\n\nfunction range(size, startAt = 0) {\n  return [...Array(size).keys()].map((i) => i + startAt);\n}\n\nfunction bytesToUTF8(bytes) {\n  return new TextDecoder().decode(bytes);\n}\n\n// https://github.com/asb2m10/dexed/blob/master/Documentation/sysex-format.txt\n// https://github.com/asb2m10/dexed/blob/master/Source/PluginData.cpp#L120\nfunction parseDX7VoiceSingleFormat(data, startOffset) {\n  return {name: bytesToUTF8(data.slice(startOffset + 145, startOffset + 155))};\n}\n\nfunction parseDX7VoiceBulkFormat(data, startOffset) {\n  return {name: bytesToUTF8(data.slice(startOffset + 118, startOffset + 128))};\n}\n\n// http://midi.teragonaudio.com/tech/midispec/sysex.htm\n// https://github.com/ahlstromcj/midicvt/blob/master/contrib/sysex-format.txt\nexport function parseSysexMessage(data) {\n  switch (data[1]) {\n    case 0x43: // yamaha\n      switch (data[2] >> 4) {\n        case 0:\n          switch (data[3]) {\n            case 0: {\n              // Bulk Data for 1 Voice\n              return {\n                type: 'DX7 1 Voice Bulk Data',\n                voice: parseDX7VoiceSingleFormat(data, 6),\n              };\n            }\n            case 2: {\n              return {\n                type: 'TX7 64 Performance Bulk Data',\n              };\n            }\n            case 9: {\n              // Bulk Data for 32 Voices\n              return {\n                type: 'DX7 32 Voice Bulk Data',\n                voices: range(32).map((i) =>\n                  parseDX7VoiceBulkFormat(data, 6 + i * 128)\n                ),\n              };\n            }\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n      break;\n    default:\n      break;\n  }\n\n  return {type: `Other ${getSysexManufacturer(data)} message`};\n}\n\nfunction bytesToManufacturerID(bytes) {\n  return Array.from(bytes)\n    .map((v) => v.toString(16).padStart(2, '0'))\n    .join('');\n}\n\nexport function getSysexManufacturer(data) {\n  if (data[1] === 0x00) {\n    return midimanufacturers[bytesToManufacturerID(data.slice(1, 4))];\n  } else {\n    return midimanufacturers[bytesToManufacturerID(data.slice(1, 2))];\n  }\n}\n","import React, {useCallback, useEffect, useState, useMemo} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport Modal from 'react-modal';\n\nimport './App.css';\nimport MidiDeviceSelector from './MidiDeviceSelector';\nimport useLocalStorage from './useLocalStorage';\nimport useLocalForage from './useLocalForage';\nimport Table from './Table';\nimport byteArrayToHex from './byteArrayToHex';\nimport downloadBlob from './downloadBlob';\nimport md5 from './md5';\nimport Checkbox from './Checkbox';\nimport uniqueID from './uniqueID';\nimport LogView from './LogView';\nimport EditableText from './EditableText';\nimport {parseSysexMessage, getSysexManufacturer} from './sysex';\n\nfunction concatTypedArrays(ArrayType, arrays) {\n  let totalLength = 0;\n  for (const arr of arrays) {\n    totalLength += arr.length;\n  }\n  const result = new ArrayType(totalLength);\n  let offset = 0;\n  for (const arr of arrays) {\n    result.set(arr, offset);\n    offset += arr.length;\n  }\n  return result;\n}\n\nModal.setAppElement(document.body);\n\nfunction splitToSysExMessages(data) {\n  let pos = 0;\n  let lastPos = 0;\n  let parts = [];\n  while ((pos = data.indexOf(0xf7, lastPos)) !== -1) {\n    pos += 1; // include the end byte\n    parts.push(data.slice(lastPos, pos));\n    lastPos = pos;\n  }\n\n  return parts;\n}\n\n// can be saved to localstorage so we can reacquire the same port by id next time\nclass MidiPortReference {\n  constructor(id, port) {\n    this.id = id;\n    this.port = port;\n  }\n  toJSON() {\n    return {id: this.id, port: null};\n  }\n}\n\nfunction getTimestampString(ts) {\n  var d = new Date(ts);\n  return (\n    [d.getFullYear(), d.getMonth() + 1, d.getDate()].join('-') +\n    ' ' +\n    [\n      String(d.getHours()).padStart(2, '0'),\n      String(d.getMinutes()).padStart(2, '0'),\n      String(d.getSeconds()).padStart(2, '0'),\n    ].join(':')\n  );\n}\n\nfunction makeItem({message, name}) {\n  const messages = splitToSysExMessages(message);\n  return {\n    message,\n    name,\n    type: parseSysexMessage(messages[0])?.type,\n    timestamp: Date.now(),\n    hash: md5(byteArrayToHex(message)),\n    messagesCount: splitToSysExMessages(message).length,\n  };\n}\n\nfunction formatBytesForDisplay(str, lineLength) {\n  let out = '';\n  for (let i = 0; i < Math.ceil(str.length / (lineLength * 2)); i++) {\n    const line = str.slice(i * lineLength * 2, (i + 1) * lineLength * 2);\n    for (let k = 0; k < Math.ceil(line.length / 2); k++) {\n      out += line.slice(k * 2, (k + 1) * 2) + ' ';\n    }\n    out += '\\n';\n  }\n  return out;\n}\n\nfunction downloadItem(item) {\n  downloadBlob(\n    new Blob([new Uint8Array(item.message)]),\n    item.name + (item.name.toLowerCase().endsWith('.syx') ? '' : '.syx')\n  );\n}\n\nfunction FileDropzone({onFile, onStatus, className, autoSend}) {\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      acceptedFiles.forEach((file) => {\n        const reader = new FileReader();\n\n        reader.onabort = () => onStatus('file reading was aborted');\n        reader.onerror = () => onStatus('file reading has failed');\n        reader.onload = () => {\n          // Do whatever you want with the file contents\n          const binaryStr = reader.result;\n\n          onFile(file, binaryStr);\n        };\n        reader.readAsArrayBuffer(file);\n      });\n      onStatus(null);\n    },\n    [onFile, onStatus]\n  );\n  const {getRootProps, getInputProps} = useDropzone({onDrop});\n  const inputProps = getInputProps();\n\n  return (\n    <div\n      className={className}\n      {...getRootProps()}\n      style={{\n        textAlign: 'center',\n        border: 'dashed 3px #ccc',\n        borderRadius: 30,\n        cursor: 'pointer',\n      }}\n    >\n      <div style={{margin: '32px auto', fontSize: 24, maxWidth: 360}}>\n        Drag & drop some .syx files here (or click here to select files) to{' '}\n        {autoSend ? 'send them to your device' : 'add them to the library'}.\n      </div>\n      <input\n        {...inputProps}\n        style={{...inputProps.style, display: 'block', margin: '32px auto'}}\n      />\n    </div>\n  );\n}\n\nfunction uniqueBy(values, getKey) {\n  return Array.from(new Map(values.map((v) => [getKey(v), v])).values());\n}\n\nconst SendButton = React.memo(function SendButton({item, sendItem}) {\n  return <button onClick={() => sendItem(item)}>send</button>;\n});\nconst ItemName = React.memo(function ItemName({item, updateItem}) {\n  return (\n    <EditableText\n      value={item.name}\n      onChange={useCallback(\n        (updatedName) => updateItem({...item, name: updatedName}),\n        [updateItem, item]\n      )}\n    />\n  );\n});\n\nconst InfoButton = React.memo(function InfoButton({item, setModalContent}) {\n  return (\n    <button\n      onClick={() =>\n        setModalContent({\n          title: item.name,\n          body: (\n            <div style={{marginTop: 16}}>\n              <div>Manufacturer: {getSysexManufacturer(item.message)}</div>\n              <div>Messages: {item.messagesCount}</div>\n\n              <h3>Data</h3>\n\n              {splitToSysExMessages(item.message).map((message, i) => {\n                const parsed = parseSysexMessage(message);\n                return (\n                  <React.Fragment key={i}>\n                    <h4>Message {i + 1}</h4>\n                    {parsed && (\n                      <>\n                        <div>Parsed:</div>\n                        <pre>{JSON.stringify(parsed, null, 2)}</pre>\n                      </>\n                    )}\n                    <div>Bytes:</div>\n                    <pre>\n                      {formatBytesForDisplay(byteArrayToHex(message), 16)}\n                    </pre>\n                  </React.Fragment>\n                );\n              })}\n            </div>\n          ),\n        })\n      }\n    >\n      info\n    </button>\n  );\n});\nconst DeleteButton = React.memo(function PrintButton({item, deleteItem}) {\n  return <button onClick={() => deleteItem(item)}>delete</button>;\n});\nconst DownloadButton = React.memo(function PrintButton({item}) {\n  return <button onClick={() => downloadItem(item)}>download</button>;\n});\n\nfunction addToSysexMessages(prev, newItem) {\n  return uniqueBy((prev ?? []).concat(newItem), (item) => item.hash);\n}\n\nfunction initSysexMessagesReceived(name, messages = []) {\n  return {\n    name,\n    messages,\n  };\n}\n\nfunction App() {\n  const [midiIn, setMidiIn] = useLocalStorage('inPort', null);\n  const [midiOut, setMidiOut] = useLocalStorage('outPort', null);\n  const [autoSend, setAutoSend] = useLocalStorage('autoSend', true);\n  const [errorMessage, setErrorMessageState] = useState(null);\n  const [statusMessages, setStatusMessagesState] = useState([]);\n  const [modalContent, setModalContent] = useState(null);\n  const [sysexMessagesReceived, setSysexMessagesReceived] = useState(null);\n\n  function updateSysexMessagesReceivedList(cb) {\n    setSysexMessagesReceived((s) => ({...s, messages: cb(s.messages)}));\n  }\n\n  function messagesToLibraryFile(messagesReceived) {\n    return makeItem({\n      message: concatTypedArrays(\n        Uint8Array,\n        messagesReceived.messages.map((m) => m.message)\n      ),\n      name: messagesReceived.name,\n    });\n  }\n\n  function storeMessages(messagesReceived) {\n    const item = messagesToLibraryFile(messagesReceived);\n    setSysexMessages((s) => addToSysexMessages(s, item));\n    return item;\n  }\n  const [\n    sysexMessagesFromStorage,\n    setSysexMessages,\n    clearSysexMessages,\n  ] = useLocalForage('sysexMessages', []);\n  const sysexMessages = useMemo(() => sysexMessagesFromStorage ?? [], [\n    sysexMessagesFromStorage,\n  ]);\n  const setStatusMessage = useCallback((msg) => {\n    setStatusMessagesState((s) => s.concat({msg, id: uniqueID()}));\n  }, []);\n  const setErrorMessage = useCallback((msg) => {\n    if (msg) console.error(msg);\n    setErrorMessageState(msg);\n  }, []);\n  const sendMidi = (buf) => {\n    if (midiOut?.port) {\n      try {\n        setErrorMessage(null);\n        midiOut.port.send(new Uint8Array(buf));\n        return true;\n      } catch (err) {\n        setErrorMessage(err.toString());\n      }\n    } else {\n      setErrorMessage('no midi out selected');\n    }\n    return false;\n  };\n\n  const sendItem = (item) => {\n    if (item.message[0] !== 0xf0) {\n      setErrorMessage('not a valid sysex file');\n      return false;\n    }\n\n    const messages = splitToSysExMessages(item.message);\n\n    if (messages.length === 1) {\n      if (sendMidi(item.message)) {\n        setStatusMessage(`Sent \"${item.name}\" to ${midiOut?.port?.name}`);\n      }\n    } else {\n      let messageIdx = 0;\n      let error = false;\n      while (messageIdx < messages.length) {\n        if (!sendMidi(messages[messageIdx])) {\n          error = true;\n          break;\n        }\n      }\n      if (!error) {\n        setStatusMessage(\n          `Sent \"${item.name}\" to ${midiOut?.port?.name} (messages sent: ${messageIdx} of ${messages})`\n        );\n      } else {\n        setStatusMessage(\n          `Failed to send \"${item.name}\" to ${midiOut?.port?.name} (messages sent: ${messageIdx} of ${messages})`\n        );\n      }\n    }\n  };\n\n  function deleteItem(itemToDelete) {\n    setSysexMessages((s) => s.filter((item) => item !== itemToDelete));\n  }\n\n  const updateItem = useCallback(\n    function updateItem(itemToUpdate) {\n      setSysexMessages((s) =>\n        s.map((item) => (item.hash === itemToUpdate.hash ? itemToUpdate : item))\n      );\n    },\n    [setSysexMessages]\n  );\n\n  useEffect(() => {\n    if (!midiIn && !midiOut) {\n      setStatusMessage('Select a midi in or out port to get started');\n      setErrorMessage(null);\n    }\n  }, [midiIn, midiOut, setErrorMessage, setStatusMessage]);\n\n  useEffect(() => {\n    if (!midiIn?.port) return;\n    midiIn.port.onmidimessage = (event) => {\n      if (event.data[0] === 0xf0) {\n        setStatusMessage(\n          `Received ${event.data.length} byte message from ${midiIn.port.name}`\n        );\n        setSysexMessagesReceived((s) => {\n          const newMsg = {\n            name:\n              parseSysexMessage(event.data)?.type ??\n              `Dumped from ${midiIn.port.name}`,\n            message: event.data,\n            source: midiIn.port.name,\n          };\n          return s\n            ? {...s, messages: s.messages.concat(newMsg)}\n            : initSysexMessagesReceived(newMsg.name, [newMsg]);\n        });\n      }\n    };\n    return () => {\n      midiIn.port.onmidimessage = null;\n    };\n  }, [midiIn, midiIn?.port, setSysexMessages, setStatusMessage]);\n\n  const tableItems = useMemo(\n    () =>\n      sysexMessages\n        .slice()\n        .sort((a, b) => (b.timestamp ?? 0) - (a.timestamp ?? 0)),\n    [sysexMessages]\n  );\n  return (\n    <div className=\"App\">\n      <div style={{margin: 16}}>\n        <div style={{display: 'inline-block', padding: '0 4px'}}>\n          <MidiDeviceSelector\n            type=\"input\"\n            selectedPortID={midiIn?.id}\n            onChange={(port) =>\n              setMidiIn(port ? new MidiPortReference(port.id, port) : null)\n            }\n            sysex\n          />\n        </div>\n        <div style={{display: 'inline-block', padding: '0 4px'}}>\n          <MidiDeviceSelector\n            type=\"output\"\n            selectedPortID={midiOut?.id}\n            onChange={(port) =>\n              setMidiOut(port ? new MidiPortReference(port.id, port) : null)\n            }\n            sysex\n          />\n        </div>\n      </div>\n      {errorMessage && (\n        <div\n          style={{backgroundColor: 'red', color: 'white', padding: 16}}\n          onClick={() => setErrorMessageState(null)}\n        >\n          {errorMessage}\n        </div>\n      )}\n      <div className=\"App_columns\">\n        <div\n          className=\"App_column_outer\"\n          style={{\n            margin: 16,\n          }}\n        >\n          <h2>Send</h2>\n          <div style={{paddingBottom: 8}}>\n            <Checkbox\n              label=\"automatically send dragged & dropped files to device\"\n              checked={autoSend}\n              onChange={() => setAutoSend((s) => !s)}\n            />\n          </div>\n          <FileDropzone\n            className=\"App_column_inner\"\n            autoSend={autoSend}\n            onFile={(file, arrayBuffer) => {\n              const buf = new Uint8Array(arrayBuffer);\n              if (buf[0] !== 0xf0) {\n                setErrorMessage(\n                  `\"${file.name} is not a valid sysex message file\"`\n                );\n                return;\n              }\n              const item = makeItem({\n                message: buf,\n                name: file.name,\n              });\n              if (autoSend) {\n                sendItem(item);\n              }\n              setSysexMessages((s) => addToSysexMessages(s, item));\n            }}\n            onStatus={setErrorMessage}\n          />\n        </div>\n        <div\n          className=\"App_column_outer\"\n          style={{\n            margin: 16,\n          }}\n        >\n          <h2>Receive</h2>\n          <div\n            className=\"App_column_inner\"\n            style={{\n              border: 'solid 1px black',\n            }}\n          >\n            <div>\n              {sysexMessagesReceived?.messages.length ?? 0} messages received\n              {(sysexMessagesReceived?.messages.length ?? 0) > 0 &&\n                ` from ${sysexMessagesReceived?.messages[0].source}`}\n            </div>\n            <div>\n              {sysexMessagesReceived?.messages.length > 0 && (\n                <>\n                  <div className=\"App_receive_group_filename\">\n                    Group filename:{' '}\n                    <EditableText\n                      value={sysexMessagesReceived.name}\n                      size={40}\n                      onChange={(updatedName) =>\n                        setSysexMessagesReceived((s) => ({\n                          ...s,\n                          name: updatedName,\n                        }))\n                      }\n                    />\n                  </div>\n                  <div className=\"App_receive_group_actions\">\n                    All messages:{' '}\n                    <button\n                      onClick={() => {\n                        storeMessages(sysexMessagesReceived);\n                      }}\n                    >\n                      store as group\n                    </button>\n                    <button\n                      onClick={() => {\n                        const item = messagesToLibraryFile(\n                          sysexMessagesReceived\n                        );\n                        downloadItem(item);\n                      }}\n                    >\n                      download\n                    </button>\n                    <button\n                      onClick={() => {\n                        setSysexMessagesReceived(null);\n                      }}\n                    >\n                      discard all\n                    </button>\n                  </div>\n                  <div style={{overflowY: 'auto', height: 216}}>\n                    <Table\n                      items={sysexMessagesReceived?.messages}\n                      headings={['#', 'Filename', 'Bytes', 'Actions']}\n                      layout={[30, 'auto', 65, 'auto']}\n                      rowRenderer={(item, i) => [\n                        `${i + 1}`,\n                        <EditableText\n                          className=\"App_receive_name\"\n                          value={item.name}\n                          onChange={(updatedName) =>\n                            updateSysexMessagesReceivedList((s) =>\n                              s.map((otherItem) =>\n                                otherItem === item\n                                  ? {...item, name: updatedName}\n                                  : otherItem\n                              )\n                            )\n                          }\n                        />,\n                        `${item.message.length}B`,\n                        <div className=\"App_table_actions App_receive_group_actions\">\n                          <button\n                            onClick={() => {\n                              storeMessages({\n                                name: item.name,\n                                messages: [item],\n                              });\n                            }}\n                          >\n                            store in library\n                          </button>\n                          <button\n                            onClick={() => {\n                              downloadItem(item);\n                            }}\n                          >\n                            download\n                          </button>\n                          <button\n                            onClick={() => {\n                              updateSysexMessagesReceivedList((s) =>\n                                s.filter((otherItem) => item !== otherItem)\n                              );\n                            }}\n                          >\n                            discard\n                          </button>\n                        </div>,\n                      ]}\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          margin: 16,\n        }}\n      >\n        <h2>Info</h2>\n        <div\n          style={{\n            border: 'solid 1px black',\n            height: 200,\n            padding: 12,\n            overflowY: 'scroll',\n          }}\n        >\n          <LogView items={statusMessages.slice().sort((a, b) => b.id - a.id)} />\n        </div>\n      </div>\n      <div style={{margin: 16}}>\n        <h2>Library</h2>\n        {tableItems.length ? (\n          <Table\n            items={tableItems}\n            className=\"App_library_table\"\n            headings={['Name', 'Type', 'Msgs', 'Bytes', 'Added', 'Actions']}\n            rowRenderer={(item) => [\n              <ItemName item={item} updateItem={updateItem} />,\n              item.type,\n              item.messagesCount,\n              `${item.message.length}B`,\n              item.timestamp ? getTimestampString(item.timestamp) : 'unknown',\n              <div className=\"App_table_actions\">\n                <SendButton item={item} sendItem={sendItem} />\n                <DownloadButton item={item} />\n                <InfoButton item={item} setModalContent={setModalContent} />\n                <DeleteButton item={item} deleteItem={deleteItem} />\n              </div>,\n            ]}\n          />\n        ) : (\n          'SysEx messages you upload or download will be listed here'\n        )}\n      </div>\n      {Boolean(sysexMessages.length) && (\n        <div style={{margin: 16}}>\n          <button\n            onClick={() => {\n              if (\n                window.confirm(\n                  \"Are you sure? This will delete everything you've uploaded or downloaded from this app\"\n                )\n              ) {\n                clearSysexMessages();\n              }\n            }}\n          >\n            clear all history\n          </button>\n        </div>\n      )}\n      {modalContent && (\n        <Modal\n          isOpen={Boolean(modalContent)}\n          onRequestClose={() => setModalContent(null)}\n          contentLabel={modalContent?.title}\n        >\n          <h2>{modalContent?.title}</h2>\n          <button onClick={() => setModalContent(null)}>close</button>\n          {modalContent?.body}\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","export default function downloadBlob(blob, name = 'file.syx') {\n  // Convert your blob into a Blob URL (a special url that points to an object in the browser's memory)\n  const blobUrl = URL.createObjectURL(blob);\n\n  // Create a link element\n  const link = document.createElement('a');\n\n  // Set link's href to point to the Blob URL\n  link.href = blobUrl;\n  link.download = name;\n\n  // Append link to the body\n  document.body.appendChild(link);\n\n  // Dispatch click event on the link\n  // This is necessary as link.click() does not work on the latest firefox\n  link.dispatchEvent(\n    new MouseEvent('click', {\n      bubbles: true,\n      cancelable: true,\n      view: window,\n    })\n  );\n\n  // Remove link from body\n  document.body.removeChild(link);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css/normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}